// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// EmailConfirm is the golang structure for table email_confirm.
type EmailConfirm struct {
	Id          int64       `orm:"id"           json:"id"`          //
	Uid         string      `orm:"uid"          json:"uid"`         //
	Email       string      `orm:"email"        json:"email"`       //
	Token       string      `orm:"token"        json:"token"`       //
	ConfirmedAt *gtime.Time `orm:"confirmed_at" json:"confirmedAt"` //
	CreatedAt   *gtime.Time `orm:"created_at"   json:"createdAt"`   //
	UpdatedAt   *gtime.Time `orm:"updated_at"   json:"updatedAt"`   //
}

// Post is the golang structure for table post.
type Post struct {
	Id           int64       `orm:"id"            json:"id"`           //
	Creator      string      `orm:"creator"       json:"creator"`      //
	Title        string      `orm:"title"         json:"title"`        //
	Content      string      `orm:"content"       json:"content"`      //
	CommentCount int64       `orm:"comment_count" json:"commentCount"` //
	LikeCount    int64       `orm:"like_count"    json:"likeCount"`    //
	IsPublic     bool        `orm:"is_public"     json:"isPublic"`     //
	CreatedAt    *gtime.Time `orm:"created_at"    json:"createdAt"`    //
	UpdatedAt    *gtime.Time `orm:"updated_at"    json:"updatedAt"`    //
	DeletedAt    *gtime.Time `orm:"deleted_at"    json:"deletedAt"`    //
}

// Profile is the golang structure for table profile.
type Profile struct {
	Id        int64       `orm:"id"         json:"id"`        //
	Uid       string      `orm:"uid"        json:"uid"`       //
	Avatar    string      `orm:"avatar"     json:"avatar"`    //
	Nickname  string      `orm:"nickname"   json:"nickname"`  //
	Gender    string      `orm:"gender"     json:"gender"`    //
	Motto     string      `orm:"motto"      json:"motto"`     //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
	DeletedAt *gtime.Time `orm:"deleted_at" json:"deletedAt"` //
}

// TE is the golang structure for table t_e.
type TE struct {
	Docs string `orm:"docs" json:"docs"` //
}

// User is the golang structure for table user.
type User struct {
	Id        string      `orm:"id"         json:"id"`        //
	Account   string      `orm:"account"    json:"account"`   //
	Email     string      `orm:"email"      json:"email"`     //
	Phone     string      `orm:"phone"      json:"phone"`     //
	Role      string      `orm:"role"       json:"role"`      //
	Disabled  bool        `orm:"disabled"   json:"disabled"`  //
	Password  string      `orm:"password"   json:"password"`  //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
	DeletedAt *gtime.Time `orm:"deleted_at" json:"deletedAt"` //
}

// UserPostLike is the golang structure for table user_post_like.
type UserPostLike struct {
	Id        int64       `orm:"id"         json:"id"`        //
	Uid       string      `orm:"uid"        json:"uid"`       //
	Pid       int64       `orm:"pid"        json:"pid"`       //
	CreatedAt *gtime.Time `orm:"created_at" json:"createdAt"` //
	UpdatedAt *gtime.Time `orm:"updated_at" json:"updatedAt"` //
	DeletedAt *gtime.Time `orm:"deleted_at" json:"deletedAt"` //
}
