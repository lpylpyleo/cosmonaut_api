// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// EmailConfirmDao is the manager for logic model data accessing and custom defined data operations functions management.
type EmailConfirmDao struct {
	gmvc.M                     // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      emailConfirmColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB              // DB is the raw underlying database management object.
	Table  string              // Table is the underlying table name of the DAO.
}

// EmailConfirmColumns defines and stores column names for table email_confirm.
type emailConfirmColumns struct {
	Id          string //
	Uid         string //
	Email       string //
	Token       string //
	ConfirmedAt string //
	CreatedAt   string //
	UpdatedAt   string //
}

// NewEmailConfirmDao creates and returns a new DAO object for table data access.
func NewEmailConfirmDao() *EmailConfirmDao {
	columns := emailConfirmColumns{
		Id:          "id",
		Uid:         "uid",
		Email:       "email",
		Token:       "token",
		ConfirmedAt: "confirmed_at",
		CreatedAt:   "created_at",
		UpdatedAt:   "updated_at",
	}
	return &EmailConfirmDao{
		C:     columns,
		M:     g.DB("default").Model("email_confirm").Safe(),
		DB:    g.DB("default"),
		Table: "email_confirm",
	}
}
