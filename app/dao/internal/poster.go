// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// PosterDao is the manager for logic model data accessing and custom defined data operations functions management.
type PosterDao struct {
	gmvc.M               // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      posterColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB        // DB is the raw underlying database management object.
	Table  string        // Table is the underlying table name of the DAO.
}

// PosterColumns defines and stores column names for table poster.
type posterColumns struct {
	Id        string //
	Poster    string //
	Title     string //
	Content   string //
	Deleted   string //
	CreatedAt string //
	UpdatedAt string //
	DeletedAt string //
}

// NewPosterDao creates and returns a new DAO object for table data access.
func NewPosterDao() *PosterDao {
	columns := posterColumns{
		Id:        "id",
		Poster:    "poster",
		Title:     "title",
		Content:   "content",
		Deleted:   "deleted",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
		DeletedAt: "deleted_at",
	}
	return &PosterDao{
		C:     columns,
		M:     g.DB("default").Model("poster").Safe(),
		DB:    g.DB("default"),
		Table: "poster",
	}
}
